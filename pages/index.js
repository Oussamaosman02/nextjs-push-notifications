import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";

export default function Home() {
  const publica =
    "BFd8Qlz3sMT5vTtNxsSh0to-bahYDhgPqwbXSgKWbFZw9Bvb_Y-YdX95sQXI0JzAcFaWRRgKWhuOLJDXArFSbew";

  function urlBase64ToUint8Array(base64String) {
    const padding = "=".repeat((4 - (base64String.length % 4)) % 4);
    const base64 = (base64String + padding)
      .replace(/\-/g, "+")
      .replace(/_/g, "/");

    const rawData = window.atob(base64);
    const outputArray = new Uint8Array(rawData.length);

    for (let i = 0; i < rawData.length; ++i) {
      outputArray[i] = rawData.charCodeAt(i);
    }
    return outputArray;
  }

  async function subscription() {
    if ("serviceWorker" in navigator) {
      try {
        const registration = await navigator.serviceWorker.register("/sw.js", {
          scope: "/",
        });

        if (registration.installing) {
          console.log("Service worker installing");
        } else if (registration.waiting) {
          console.log("Service worker installed");
        } else if (registration.active) {
          console.log("Service worker active");
          await navigator.serviceWorker.ready.then(
            (serviceWorkerRegistration) => {
              const options = {
                userVisibleOnly: true,
                applicationServerKey: urlBase64ToUint8Array(publica),
              };
              serviceWorkerRegistration.pushManager.subscribe(options).then(
                (pushSubscription) => {
                  fetch("/api/subscription", {
                    method: "POST",
                    body: JSON.stringify(pushSubscription),
                    headers: {
                      "Content-Type": "application/json",
                    },
                  });
                  const algo = localStorage.setItem(
                    "ps",
                    JSON.stringify(pushSubscription)
                  );
                },
                (error) => {
                  console.error(error);
                }
              );
            }
          );
        }
      } catch (error) {
        console.error(`Registration failed with ${error}`);
      }
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <button
            onClick={async (e) => {
              e.preventDefault();
              await subscription();
              await subscription();
            }}
          >
            Quiero recibr notificaciones
          </button>
        </div>
        <br />
        <hr />
        <br />
        <div>
          <Link href="/admini">
            <button>Admini</button>
          </Link>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
